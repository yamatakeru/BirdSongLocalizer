{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yamat\\\\Workspace\\\\hark_bird_app\\\\src\\\\components\\\\Main.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport Konva from 'konva';\nimport useImage from 'use-image';\nimport { Stage, Layer, Star, Rect, Text, Image } from 'react-konva';\nimport request from \"superagent\";\nimport { UserCount } from '../App';\nimport Reset from './Reset';\n\nconst URLImage = props => {\n  const [image] = useImage(props.url);\n  console.log(image);\n  return /*#__PURE__*/React.createElement(Image, {\n    image: image,\n    scaleX: props.scaleX,\n    scaleY: props.scaleY,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 10\n    }\n  });\n};\n\nconst Main = () => {\n  const [count, setCount] = useContext(UserCount);\n  const [img_data, setImgData] = useState(null);\n  const [data_ia_loaded, setDataIsLoaded] = useState(false);\n\n  const getData = () => {\n    request.get(\"/api/getSpectrumImg\").end((err, data) => {\n      if (err) {\n        console.error(err);\n        return;\n      }\n\n      setImgData(data.body);\n      console.log(img_data);\n      setDataIsLoaded(true);\n      return;\n    });\n  };\n\n  const sendData = () => {\n    request.get(\"/api/sendData\").query({\n      data: -999\n    }).end((err, data) => {\n      if (err) {\n        console.error(err);\n        return;\n      }\n\n      console.log(data.body);\n    });\n  };\n\n  const stage_area = () => {\n    if (data_ia_loaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Stage1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, \"Specgram\"), /*#__PURE__*/React.createElement(Stage, {\n        width: window.innerWidth,\n        height: window.innerHeight / 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Layer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(URLImage, {\n        url: img_data.specgram,\n        scaleX: 1,\n        scaleY: 0.5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Text, {\n        text: \"Try to drag a star\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Stage2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }, \"Music\"), /*#__PURE__*/React.createElement(Stage, {\n        width: window.innerWidth,\n        height: window.innerHeight / 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Layer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(URLImage, {\n        url: img_data.music.img_path,\n        scaleX: 1,\n        scaleY: 0.5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Text, {\n        text: \"Try to drag a star\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }\n      })))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 14\n        }\n      }, \" Please date load. \");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => getData(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, \"load data\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setDataIsLoaded(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, \"Click me\")), stage_area());\n};\n\nexport default Main;","map":{"version":3,"sources":["C:/Users/yamat/Workspace/hark_bird_app/src/components/Main.js"],"names":["React","useState","useEffect","useContext","Konva","useImage","Stage","Layer","Star","Rect","Text","Image","request","UserCount","Reset","URLImage","props","image","url","console","log","scaleX","scaleY","Main","count","setCount","img_data","setImgData","data_ia_loaded","setDataIsLoaded","getData","get","end","err","data","error","body","sendData","query","stage_area","window","innerWidth","innerHeight","specgram","music","img_path"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\r\nimport Konva from 'konva';\r\nimport useImage from 'use-image';\r\nimport { Stage, Layer, Star, Rect, Text, Image } from 'react-konva';\r\nimport request from \"superagent\";\r\nimport { UserCount } from '../App';\r\nimport Reset from './Reset';\r\n\r\n\r\nconst URLImage = (props) => {\r\n  const [image] = useImage(props.url);\r\n  console.log(image);\r\n  return <Image\r\n    image={image}\r\n    scaleX={props.scaleX}\r\n    scaleY={props.scaleY}\r\n  />;\r\n};\r\n\r\nconst Main = () => {\r\n  const [count, setCount] = useContext(UserCount);\r\n  const [img_data, setImgData] = useState(null);\r\n  const [data_ia_loaded, setDataIsLoaded] = useState(false);\r\n\r\n  const getData = () => {\r\n    request\r\n      .get(\"/api/getSpectrumImg\")\r\n      .end((err, data) => {\r\n        if (err) {\r\n          console.error(err);\r\n          return;\r\n        }\r\n          setImgData(data.body);\r\n          console.log(img_data)\r\n          setDataIsLoaded(true);\r\n          return;\r\n      });\r\n  };\r\n\r\n  const sendData = () => {\r\n    request\r\n    .get(\"/api/sendData\")\r\n    .query({data: -999})\r\n    .end((err, data) => {\r\n      if (err) {\r\n        console.error(err);\r\n        return;\r\n      }\r\n        console.log(data.body);\r\n    });\r\n  };\r\n\r\n  const stage_area = () => {\r\n    if (data_ia_loaded) {\r\n      return (\r\n        <div>\r\n          <div className=\"Stage1\">\r\n            <p>Specgram</p>\r\n            <Stage width={window.innerWidth} height={window.innerHeight/3}>\r\n              <Layer>\r\n                <URLImage\r\n                  url={img_data.specgram}\r\n                  scaleX={1}\r\n                  scaleY={0.5}\r\n                />\r\n                <Text text=\"Try to drag a star\" />\r\n              </Layer>\r\n            </Stage>\r\n          </div>\r\n          <div className=\"Stage2\">\r\n          <p>Music</p>\r\n          <Stage width={window.innerWidth} height={window.innerHeight/3}>\r\n            <Layer>\r\n              <URLImage\r\n                url={img_data.music.img_path}\r\n                scaleX={1}\r\n                scaleY={0.5}\r\n              />\r\n              <Text text=\"Try to drag a star\" />\r\n            </Layer>\r\n          </Stage>\r\n        </div>\r\n      </div>\r\n      );\r\n    } else {\r\n      return <p> Please date load. </p>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Main\">\r\n      <div className=\"\">\r\n      <button onClick={() => getData()}>\r\n          load data\r\n      </button>\r\n      <button onClick={() => setDataIsLoaded(false)}>\r\n          Click me\r\n      </button>\r\n      </div>\r\n      {stage_area()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}