{"ast":null,"code":"var React = require('react');\n\nvar defaultState = {\n  image: undefined,\n  status: 'loading'\n};\n\nmodule.exports = function useImage(url, crossOrigin) {\n  var res = React.useState(defaultState);\n  var image = res[0].image;\n  var status = res[0].status;\n  var setState = res[1];\n  React.useEffect(function () {\n    if (!url) return;\n    var img = document.createElement('img');\n\n    function onload() {\n      setState({\n        image: img,\n        status: 'loaded'\n      });\n    }\n\n    function onerror() {\n      setState({\n        image: undefined,\n        status: 'failed'\n      });\n    }\n\n    img.addEventListener('load', onload);\n    img.addEventListener('error', onerror);\n    crossOrigin && (img.crossOrigin = crossOrigin);\n    img.src = url;\n    return function cleanup() {\n      img.removeEventListener('load', onload);\n      img.removeEventListener('error', onerror);\n      setState(defaultState);\n    };\n  }, [url, crossOrigin]); // return array because it it better to use in case of several useImage hooks\n  // const [background, backgroundStatus] = useImage(url1);\n  // const [patter] = useImage(url2);\n\n  return [image, status];\n};","map":{"version":3,"sources":["C:/Users/yamat/Workspace/BirdSongLocalizer/node_modules/use-image/index.js"],"names":["React","require","defaultState","image","undefined","status","module","exports","useImage","url","crossOrigin","res","useState","setState","useEffect","img","document","createElement","onload","onerror","addEventListener","src","cleanup","removeEventListener"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AAEA,IAAIC,YAAY,GAAG;AAAEC,EAAAA,KAAK,EAAEC,SAAT;AAAoBC,EAAAA,MAAM,EAAE;AAA5B,CAAnB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,QAAT,CAAkBC,GAAlB,EAAuBC,WAAvB,EAAoC;AACnD,MAAIC,GAAG,GAAGX,KAAK,CAACY,QAAN,CAAeV,YAAf,CAAV;AACA,MAAIC,KAAK,GAAGQ,GAAG,CAAC,CAAD,CAAH,CAAOR,KAAnB;AACA,MAAIE,MAAM,GAAGM,GAAG,CAAC,CAAD,CAAH,CAAON,MAApB;AAEA,MAAIQ,QAAQ,GAAGF,GAAG,CAAC,CAAD,CAAlB;AAEAX,EAAAA,KAAK,CAACc,SAAN,CACE,YAAY;AACV,QAAI,CAACL,GAAL,EAAU;AACV,QAAIM,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAV;;AAEA,aAASC,MAAT,GAAkB;AAChBL,MAAAA,QAAQ,CAAC;AAAEV,QAAAA,KAAK,EAAEY,GAAT;AAAcV,QAAAA,MAAM,EAAE;AAAtB,OAAD,CAAR;AACD;;AAED,aAASc,OAAT,GAAmB;AACjBN,MAAAA,QAAQ,CAAC;AAAEV,QAAAA,KAAK,EAAEC,SAAT;AAAoBC,QAAAA,MAAM,EAAE;AAA5B,OAAD,CAAR;AACD;;AAEDU,IAAAA,GAAG,CAACK,gBAAJ,CAAqB,MAArB,EAA6BF,MAA7B;AACAH,IAAAA,GAAG,CAACK,gBAAJ,CAAqB,OAArB,EAA8BD,OAA9B;AACAT,IAAAA,WAAW,KAAKK,GAAG,CAACL,WAAJ,GAAkBA,WAAvB,CAAX;AACAK,IAAAA,GAAG,CAACM,GAAJ,GAAUZ,GAAV;AAEA,WAAO,SAASa,OAAT,GAAmB;AACxBP,MAAAA,GAAG,CAACQ,mBAAJ,CAAwB,MAAxB,EAAgCL,MAAhC;AACAH,MAAAA,GAAG,CAACQ,mBAAJ,CAAwB,OAAxB,EAAiCJ,OAAjC;AACAN,MAAAA,QAAQ,CAACX,YAAD,CAAR;AACD,KAJD;AAKD,GAvBH,EAwBE,CAACO,GAAD,EAAMC,WAAN,CAxBF,EAPmD,CAkCnD;AACA;AACA;;AACA,SAAO,CAACP,KAAD,EAAQE,MAAR,CAAP;AACD,CAtCD","sourcesContent":["var React = require('react');\n\nvar defaultState = { image: undefined, status: 'loading' };\n\nmodule.exports = function useImage(url, crossOrigin) {\n  var res = React.useState(defaultState);\n  var image = res[0].image;\n  var status = res[0].status;\n\n  var setState = res[1];\n\n  React.useEffect(\n    function () {\n      if (!url) return;\n      var img = document.createElement('img');\n\n      function onload() {\n        setState({ image: img, status: 'loaded' });\n      }\n\n      function onerror() {\n        setState({ image: undefined, status: 'failed' });\n      }\n\n      img.addEventListener('load', onload);\n      img.addEventListener('error', onerror);\n      crossOrigin && (img.crossOrigin = crossOrigin);\n      img.src = url;\n\n      return function cleanup() {\n        img.removeEventListener('load', onload);\n        img.removeEventListener('error', onerror);\n        setState(defaultState);\n      };\n    },\n    [url, crossOrigin]\n  );\n\n  // return array because it it better to use in case of several useImage hooks\n  // const [background, backgroundStatus] = useImage(url1);\n  // const [patter] = useImage(url2);\n  return [image, status];\n};\n"]},"metadata":{},"sourceType":"script"}