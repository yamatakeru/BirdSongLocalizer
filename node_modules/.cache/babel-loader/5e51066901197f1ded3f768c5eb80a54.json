{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yamat\\\\Workspace\\\\hark_bird_app\\\\src\\\\components\\\\Main.js\";\nimport React, { useState, useEffect, createContext, useContext } from 'react';\nimport Konva from 'konva';\nimport useImage from 'use-image';\nimport { Stage, Layer, Star, Rect, Text, Image } from 'react-konva';\nimport request from \"superagent\";\nimport { UserCount } from '../App';\nimport Reset from './Reset';\n\nconst URLImage = props => {\n  const [image] = useImage(props.url);\n  return /*#__PURE__*/React.createElement(Image, {\n    image: image,\n    scaleX: props.scaleX,\n    scaleY: props.scaleY,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 10\n    }\n  });\n};\n\nconst Main = () => {\n  const [count, setCount] = useContext(UserCount);\n  const [img_data, setImgData] = useState(null);\n  const [localized_data, setLocalizedData] = useState([]);\n  const [data_ia_loaded, setDataIsLoaded] = useState(false);\n  const [ldata_ia_loaded, setLDataIsLoaded] = useState(false);\n  const [ldata_is_selected, setLDataIsSelected] = useState(-1);\n\n  const getSpectrumImg = () => {\n    request.get(\"/api/getSpectrumImg\").end((err, data) => {\n      if (err) {\n        console.error(err);\n        return;\n      }\n\n      setImgData(data.body);\n      console.log(img_data);\n      setDataIsLoaded(true);\n      return;\n    });\n  };\n\n  const getLocalizedData = () => {\n    request.get(\"/api/getLocalizedData\").end((err, data) => {\n      if (err) {\n        console.error(err);\n        return;\n      }\n\n      console.log(data.body.localized_data.slice(1));\n      setLocalizedData(data.body.localized_data);\n      setLDataIsLoaded(true);\n      return;\n    });\n  };\n\n  const sendData = () => {\n    request.get(\"/api/sendData\").query({\n      data: -999\n    }).end((err, data) => {\n      if (err) {\n        console.error(err);\n        return;\n      }\n\n      console.log(data.body);\n    });\n  };\n\n  const updateLocalizedPos = e => {\n    const temp = localized_data.slice(0);\n    const idx = ldata_is_selected + 1;\n    console.log(temp);\n  };\n\n  const button_area = () => {\n    if (data_ia_loaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"button_area\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => getSpectrumImg(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }, \"load Spectrum\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => getLocalizedData(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }, \"load Localized data\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => setDataIsLoaded(false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      }, \"resrt data\"));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"button_area\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => getSpectrumImg(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }\n      }, \"load Spectrum\"));\n    }\n  };\n\n  const stage_area = () => {\n    if (data_ia_loaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"stage_area\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Stage1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }\n      }, \"Specgram\"), /*#__PURE__*/React.createElement(Stage, {\n        width: window.innerWidth,\n        height: window.innerHeight / 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Layer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(URLImage //url=\"https://raw.githubusercontent.com/yamatakeru/image_src/master/specgram.png\"\n      , {\n        url: img_data.specgram.img_path,\n        scaleX: 1,\n        scaleY: 0.5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Text, {\n        text: \"specgram\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Stage2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }\n      }, \"Music\"), /*#__PURE__*/React.createElement(Stage, {\n        width: window.innerWidth,\n        height: window.innerHeight / 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Layer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(URLImage //url=\"https://raw.githubusercontent.com/yamatakeru/image_src/master/music.png\"\n      , {\n        url: img_data.music.img_path,\n        scaleX: 1,\n        scaleY: 0.5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Text, {\n        text: \"music\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }\n      }), localized_data.slice(1).map(ld => {\n        return /*#__PURE__*/React.createElement(Rect, {\n          x: ld[2] / img_data.music.t_max * 992,\n          y: (-ld[4] + 180) / 360 * (740 / 2) - 10,\n          draggable: true,\n          width: ld[3] / img_data.music.t_max * 992,\n          height: 20,\n          fill: \"red\",\n          stroke: \"black\",\n          strokeWidth: 2,\n          onClick: () => setLDataIsSelected(ld[0]),\n          onDragEnd: e => updateLocalizedPos(e),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 19\n          }\n        });\n      })))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 14\n        }\n      }, \" Please date load. \");\n    }\n  };\n\n  const localized_data_area = () => {\n    if (ldata_ia_loaded && ldata_is_selected >= 0) {\n      return /*#__PURE__*/React.createElement(\"dev\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 9\n        }\n      }, localized_data.slice(1)[ldata_is_selected].map(d => {\n        return /*#__PURE__*/React.createElement(\"ul\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 20\n          }\n        }, d);\n      }));\n    }\n\n    return;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 5\n    }\n  }, button_area(), stage_area(), localized_data_area());\n};\n\nexport default Main;","map":{"version":3,"sources":["C:/Users/yamat/Workspace/hark_bird_app/src/components/Main.js"],"names":["React","useState","useEffect","createContext","useContext","Konva","useImage","Stage","Layer","Star","Rect","Text","Image","request","UserCount","Reset","URLImage","props","image","url","scaleX","scaleY","Main","count","setCount","img_data","setImgData","localized_data","setLocalizedData","data_ia_loaded","setDataIsLoaded","ldata_ia_loaded","setLDataIsLoaded","ldata_is_selected","setLDataIsSelected","getSpectrumImg","get","end","err","data","console","error","body","log","getLocalizedData","slice","sendData","query","updateLocalizedPos","e","temp","idx","button_area","stage_area","window","innerWidth","innerHeight","specgram","img_path","music","map","ld","t_max","localized_data_area","d"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,EAAoDC,UAApD,QAAsE,OAAtE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,IAA7B,EAAmCC,IAAnC,EAAyCC,KAAzC,QAAsD,aAAtD;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAM,CAACC,KAAD,IAAUZ,QAAQ,CAACW,KAAK,CAACE,GAAP,CAAxB;AACA,sBAAO,oBAAC,KAAD;AACL,IAAA,KAAK,EAAED,KADF;AAEL,IAAA,MAAM,EAAED,KAAK,CAACG,MAFT;AAGL,IAAA,MAAM,EAAEH,KAAK,CAACI,MAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAKD,CAPD;;AAUA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBpB,UAAU,CAACU,SAAD,CAApC;AACA,QAAM,CAACW,QAAD,EAAWC,UAAX,IAAyBzB,QAAQ,CAAC,IAAD,CAAvC;AACA,QAAM,CAAC0B,cAAD,EAAiBC,gBAAjB,IAAqC3B,QAAQ,CAAC,EAAD,CAAnD;AACA,QAAM,CAAC4B,cAAD,EAAiBC,eAAjB,IAAoC7B,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAAC8B,eAAD,EAAkBC,gBAAlB,IAAsC/B,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACgC,iBAAD,EAAoBC,kBAApB,IAA0CjC,QAAQ,CAAC,CAAC,CAAF,CAAxD;;AAEA,QAAMkC,cAAc,GAAG,MAAM;AAC3BtB,IAAAA,OAAO,CACJuB,GADH,CACO,qBADP,EAEGC,GAFH,CAEO,CAACC,GAAD,EAAMC,IAAN,KAAe;AAClB,UAAID,GAAJ,EAAS;AACPE,QAAAA,OAAO,CAACC,KAAR,CAAcH,GAAd;AACA;AACD;;AACCZ,MAAAA,UAAU,CAACa,IAAI,CAACG,IAAN,CAAV;AACAF,MAAAA,OAAO,CAACG,GAAR,CAAYlB,QAAZ;AACAK,MAAAA,eAAe,CAAC,IAAD,CAAf;AACA;AACH,KAXH;AAYD,GAbD;;AAeA,QAAMc,gBAAgB,GAAG,MAAM;AAC7B/B,IAAAA,OAAO,CACJuB,GADH,CACO,uBADP,EAEGC,GAFH,CAEO,CAACC,GAAD,EAAMC,IAAN,KAAe;AAClB,UAAID,GAAJ,EAAS;AACPE,QAAAA,OAAO,CAACC,KAAR,CAAcH,GAAd;AACA;AACD;;AACCE,MAAAA,OAAO,CAACG,GAAR,CAAYJ,IAAI,CAACG,IAAL,CAAUf,cAAV,CAAyBkB,KAAzB,CAA+B,CAA/B,CAAZ;AACAjB,MAAAA,gBAAgB,CAACW,IAAI,CAACG,IAAL,CAAUf,cAAX,CAAhB;AACAK,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA;AACH,KAXH;AAYD,GAbD;;AAeA,QAAMc,QAAQ,GAAG,MAAM;AACrBjC,IAAAA,OAAO,CACNuB,GADD,CACK,eADL,EAECW,KAFD,CAEO;AAACR,MAAAA,IAAI,EAAE,CAAC;AAAR,KAFP,EAGCF,GAHD,CAGK,CAACC,GAAD,EAAMC,IAAN,KAAe;AAClB,UAAID,GAAJ,EAAS;AACPE,QAAAA,OAAO,CAACC,KAAR,CAAcH,GAAd;AACA;AACD;;AACCE,MAAAA,OAAO,CAACG,GAAR,CAAYJ,IAAI,CAACG,IAAjB;AACH,KATD;AAUD,GAXD;;AAaA,QAAMM,kBAAkB,GAAIC,CAAD,IAAO;AAChC,UAAMC,IAAI,GAAGvB,cAAc,CAACkB,KAAf,CAAqB,CAArB,CAAb;AACA,UAAMM,GAAG,GAAGlB,iBAAiB,GAAG,CAAhC;AACAO,IAAAA,OAAO,CAACG,GAAR,CAAYO,IAAZ;AAGD,GAND;;AAQA,QAAME,WAAW,GAAG,MAAM;AACxB,QAAIvB,cAAJ,EAAoB;AAClB,0BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAQ,QAAA,OAAO,EAAE,MAAMM,cAAc,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAIE;AAAQ,QAAA,OAAO,EAAE,MAAMS,gBAAgB,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAJF,eAOE;AAAQ,QAAA,OAAO,EAAE,MAAMd,eAAe,CAAC,KAAD,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,CADF;AAaD,KAdD,MAcO;AACL,0BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAQ,QAAA,OAAO,EAAE,MAAMK,cAAc,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADF;AAOD;AACF,GAxBD;;AA0BA,QAAMkB,UAAU,GAAG,MAAM;AACvB,QAAIxB,cAAJ,EAAoB;AAClB,0BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEyB,MAAM,CAACC,UAArB;AAAiC,QAAA,MAAM,EAAED,MAAM,CAACE,WAAP,GAAmB,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,QAAD,CACE;AADF;AAEE,QAAA,GAAG,EAAE/B,QAAQ,CAACgC,QAAT,CAAkBC,QAFzB;AAGE,QAAA,MAAM,EAAE,CAHV;AAIE,QAAA,MAAM,EAAE,GAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAOE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADF,CAFF,CADF,eAeE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,eAEA,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEJ,MAAM,CAACC,UAArB;AAAiC,QAAA,MAAM,EAAED,MAAM,CAACE,WAAP,GAAmB,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,QAAD,CACE;AADF;AAEE,QAAA,GAAG,EAAE/B,QAAQ,CAACkC,KAAT,CAAeD,QAFtB;AAGE,QAAA,MAAM,EAAE,CAHV;AAIE,QAAA,MAAM,EAAE,GAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAOE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAQG/B,cAAc,CAACkB,KAAf,CAAqB,CAArB,EAAwBe,GAAxB,CAA4BC,EAAE,IAAI;AACjC,4BACE,oBAAC,IAAD;AACE,UAAA,CAAC,EAAGA,EAAE,CAAC,CAAD,CAAF,GAAQpC,QAAQ,CAACkC,KAAT,CAAeG,KAAxB,GAAiC,GADtC;AAEE,UAAA,CAAC,EAAG,CAAC,CAACD,EAAE,CAAC,CAAD,CAAH,GAAS,GAAV,IAAiB,GAAlB,IAA0B,MAAM,CAAhC,IAAqC,EAF1C;AAGE,UAAA,SAAS,MAHX;AAIE,UAAA,KAAK,EAAGA,EAAE,CAAC,CAAD,CAAF,GAAQpC,QAAQ,CAACkC,KAAT,CAAeG,KAAxB,GAAiC,GAJ1C;AAKE,UAAA,MAAM,EAAE,EALV;AAME,UAAA,IAAI,EAAC,KANP;AAOE,UAAA,MAAM,EAAC,OAPT;AAQE,UAAA,WAAW,EAAE,CARf;AASE,UAAA,OAAO,EAAE,MAAM5B,kBAAkB,CAAC2B,EAAE,CAAC,CAAD,CAAH,CATnC;AAUE,UAAA,SAAS,EAAEZ,CAAC,IAAGD,kBAAkB,CAACC,CAAD,CAVnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaE,OAdH,CARH,CADF,CAFA,CAfF,CADF;AAgDD,KAjDD,MAiDO;AACL,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACD;AACF,GArDD;;AAuDA,QAAMc,mBAAmB,GAAG,MAAM;AAChC,QAAIhC,eAAe,IAAIE,iBAAiB,IAAI,CAA5C,EAA+C;AAC7C,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGN,cAAc,CAACkB,KAAf,CAAqB,CAArB,EAAwBZ,iBAAxB,EAA2C2B,GAA3C,CAA+CI,CAAC,IAAI;AACnD,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,CAAL,CAAP;AACC,OAFF,CADH,CADF;AAQD;;AACD;AACD,GAZD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,WAAW,EADd,EAEGC,UAAU,EAFb,EAGGU,mBAAmB,EAHtB,CADF;AAOD,CAjKD;;AAmKA,eAAezC,IAAf","sourcesContent":["import React, { useState, useEffect, createContext, useContext } from 'react'\r\nimport Konva from 'konva';\r\nimport useImage from 'use-image';\r\nimport { Stage, Layer, Star, Rect, Text, Image } from 'react-konva';\r\nimport request from \"superagent\";\r\nimport { UserCount } from '../App';\r\nimport Reset from './Reset';\r\n\r\n\r\nconst URLImage = (props) => {\r\n  const [image] = useImage(props.url);\r\n  return <Image\r\n    image={image}\r\n    scaleX={props.scaleX}\r\n    scaleY={props.scaleY}\r\n  />;\r\n};\r\n\r\n\r\nconst Main = () => {\r\n  const [count, setCount] = useContext(UserCount);\r\n  const [img_data, setImgData] = useState(null);\r\n  const [localized_data, setLocalizedData] = useState([]);\r\n  const [data_ia_loaded, setDataIsLoaded] = useState(false);\r\n  const [ldata_ia_loaded, setLDataIsLoaded] = useState(false);\r\n  const [ldata_is_selected, setLDataIsSelected] = useState(-1);\r\n\r\n  const getSpectrumImg = () => {\r\n    request\r\n      .get(\"/api/getSpectrumImg\")\r\n      .end((err, data) => {\r\n        if (err) {\r\n          console.error(err);\r\n          return;\r\n        }\r\n          setImgData(data.body);\r\n          console.log(img_data);\r\n          setDataIsLoaded(true);\r\n          return;\r\n      });\r\n  };\r\n\r\n  const getLocalizedData = () => {\r\n    request\r\n      .get(\"/api/getLocalizedData\")\r\n      .end((err, data) => {\r\n        if (err) {\r\n          console.error(err);\r\n          return;\r\n        }\r\n          console.log(data.body.localized_data.slice(1));\r\n          setLocalizedData(data.body.localized_data);\r\n          setLDataIsLoaded(true);\r\n          return;\r\n      });\r\n  };\r\n\r\n  const sendData = () => {\r\n    request\r\n    .get(\"/api/sendData\")\r\n    .query({data: -999})\r\n    .end((err, data) => {\r\n      if (err) {\r\n        console.error(err);\r\n        return;\r\n      }\r\n        console.log(data.body);\r\n    });\r\n  };\r\n\r\n  const updateLocalizedPos = (e) => {\r\n    const temp = localized_data.slice(0);\r\n    const idx = ldata_is_selected + 1;\r\n    console.log(temp);\r\n\r\n\r\n  };\r\n\r\n  const button_area = () => {\r\n    if (data_ia_loaded) {\r\n      return (\r\n        <div className=\"button_area\">\r\n          <button onClick={() => getSpectrumImg()}>\r\n            load Spectrum\r\n          </button>\r\n          <button onClick={() => getLocalizedData()}>\r\n            load Localized data\r\n          </button>\r\n          <button onClick={() => setDataIsLoaded(false)}>\r\n            resrt data\r\n        </button>\r\n      </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"button_area\">\r\n          <button onClick={() => getSpectrumImg()}>\r\n            load Spectrum\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  const stage_area = () => {\r\n    if (data_ia_loaded) {\r\n      return (\r\n        <div className=\"stage_area\">\r\n          <div className=\"Stage1\">\r\n            <p>Specgram</p>\r\n            <Stage width={window.innerWidth} height={window.innerHeight/4}>\r\n              <Layer>\r\n                <URLImage\r\n                  //url=\"https://raw.githubusercontent.com/yamatakeru/image_src/master/specgram.png\"\r\n                  url={img_data.specgram.img_path}\r\n                  scaleX={1}\r\n                  scaleY={0.5}\r\n                />\r\n                <Text text=\"specgram\" />\r\n              </Layer>\r\n            </Stage>\r\n          </div>\r\n          <div className=\"Stage2\">\r\n          <p>Music</p>\r\n          <Stage width={window.innerWidth} height={window.innerHeight/4}>\r\n            <Layer>\r\n              <URLImage\r\n                //url=\"https://raw.githubusercontent.com/yamatakeru/image_src/master/music.png\"\r\n                url={img_data.music.img_path}\r\n                scaleX={1}\r\n                scaleY={0.5}\r\n              />\r\n              <Text text=\"music\" />\r\n              {localized_data.slice(1).map(ld => {\r\n                return (\r\n                  <Rect\r\n                    x={(ld[2] / img_data.music.t_max) * 992}\r\n                    y={((-ld[4] + 180) / 360) * (740 / 2) - 10}\r\n                    draggable\r\n                    width={(ld[3] / img_data.music.t_max) * 992}\r\n                    height={20}\r\n                    fill=\"red\"\r\n                    stroke='black'\r\n                    strokeWidth={2}\r\n                    onClick={() => setLDataIsSelected(ld[0])}\r\n                    onDragEnd={e =>updateLocalizedPos(e)}\r\n                  />\r\n                )})\r\n              }\r\n            </Layer>\r\n          </Stage>\r\n        </div>\r\n      </div>\r\n      );\r\n    } else {\r\n      return <p> Please date load. </p>;\r\n    }\r\n  };\r\n\r\n  const localized_data_area = () => {\r\n    if (ldata_ia_loaded && ldata_is_selected >= 0) {\r\n      return (\r\n        <dev>\r\n          {localized_data.slice(1)[ldata_is_selected].map(d => {\r\n            return <ul>{d}</ul>\r\n            })\r\n          }\r\n        </dev>\r\n      );\r\n    }\r\n    return;\r\n  };\r\n\r\n  return (\r\n    <div className=\"Main\">\r\n      {button_area()}\r\n      {stage_area()}\r\n      {localized_data_area()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}