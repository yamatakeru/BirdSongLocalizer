{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yamat\\\\Workspace\\\\hark_bird_app\\\\src\\\\components\\\\Main.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport Konva from 'konva';\nimport useImage from 'use-image';\nimport { Stage, Layer, Star, Rect, Text, Image } from 'react-konva';\nimport request from \"superagent\";\nimport { UserCount } from '../App';\nimport Reset from './Reset';\n\nconst URLImage = props => {\n  const [image] = useImage(props.url);\n  return /*#__PURE__*/React.createElement(Image, {\n    image: image,\n    scaleX: props.scaleX,\n    scaleY: props.scaleY,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 10\n    }\n  });\n};\n\nconst Main = () => {\n  const [count, setCount] = useContext(UserCount);\n  const [image, setImage] = useState([[0, 0], [0, 0]]);\n\n  const getData = () => {\n    request.get(\"/api/getData\").end((err, data) => {\n      if (err) {\n        console.error(err);\n        return;\n      } //setCount(data.body.data);\n\n\n      setImage(data.body.data);\n      console.log(image);\n      return;\n    });\n  };\n\n  const sendData = () => {\n    request.get(\"/api/sendData\").query({\n      data: -999\n    }).end((err, data) => {\n      if (err) {\n        console.error(err);\n        return;\n      }\n\n      console.log(data.body);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => getData(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Get data\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCount(count - 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Click me\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Stage1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \" Stage1 \"), /*#__PURE__*/React.createElement(Stage, {\n    width: window.innerWidth,\n    height: window.innerHeight / 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Layer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(URLImage, {\n    url: \"https://konvajs.org/assets/lion.png\",\n    scaleX: 10,\n    scaleY: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    text: \"Try to drag a star\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Stage2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \" Stage2 \")));\n};\n\nexport default Main;","map":{"version":3,"sources":["C:/Users/yamat/Workspace/hark_bird_app/src/components/Main.js"],"names":["React","useState","useEffect","useContext","Konva","useImage","Stage","Layer","Star","Rect","Text","Image","request","UserCount","Reset","URLImage","props","image","url","scaleX","scaleY","Main","count","setCount","setImage","getData","get","end","err","data","console","error","body","log","sendData","query","window","innerWidth","innerHeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\r\nimport Konva from 'konva';\r\nimport useImage from 'use-image';\r\nimport { Stage, Layer, Star, Rect, Text, Image } from 'react-konva';\r\nimport request from \"superagent\";\r\nimport { UserCount } from '../App';\r\nimport Reset from './Reset';\r\n\r\n\r\nconst URLImage = (props) => {\r\n  const [image] = useImage(props.url);\r\n  return <Image\r\n    image={image}\r\n    scaleX={props.scaleX}\r\n    scaleY={props.scaleY}\r\n  />;\r\n};\r\n\r\nconst Main = () => {\r\n  const [count, setCount] = useContext(UserCount);\r\n  const [image, setImage] = useState([[0, 0], [0, 0]]);\r\n\r\n  const getData = () => {\r\n    request\r\n      .get(\"/api/getData\")\r\n      .end((err, data) => {\r\n        if (err) {\r\n          console.error(err);\r\n          return;\r\n        }\r\n          //setCount(data.body.data);\r\n          setImage(data.body.data);\r\n          console.log(image);\r\n          return;\r\n      });\r\n  };\r\n\r\n  const sendData = () => {\r\n    request\r\n    .get(\"/api/sendData\")\r\n    .query({data: -999})\r\n    .end((err, data) => {\r\n      if (err) {\r\n        console.error(err);\r\n        return;\r\n      }\r\n        console.log(data.body);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Main\">\r\n      <div className=\"\">\r\n      <button onClick={() => getData()}>\r\n          Get data\r\n      </button>\r\n      <button onClick={() => setCount(count - 1)}>\r\n          Click me\r\n      </button>\r\n      </div>\r\n      <div className=\"Stage1\">\r\n        <p> Stage1 </p>\r\n        <Stage width={window.innerWidth} height={window.innerHeight/3}>\r\n        <Layer>\r\n          <URLImage\r\n            url=\"https://konvajs.org/assets/lion.png\"\r\n            scaleX={10}\r\n            scaleY={10}\r\n          />\r\n          <Text text=\"Try to drag a star\" />\r\n        </Layer>\r\n      </Stage>\r\n      </div>\r\n      <div className=\"Stage2\">\r\n        <p> Stage2 </p>\r\n        \r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}